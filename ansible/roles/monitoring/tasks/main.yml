- name: Copy Prometheus configuration to target machine
  ansible.builtin.copy:
    src: "{{ role_path }}/files/prometheus.yml"
    dest: "/home/ubuntu/prometheus.yml"
    owner: ubuntu
    group: ubuntu
    mode: '0644'


- name: Deploy Prometheus container
  ansible.builtin.docker_container:
    name: prometheus
    image: prom/prometheus
    state: started
    ports:
      - "9090:9090"
    volumes:
      - "/home/ubuntu/prometheus.yml:/etc/prometheus/prometheus.yml"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=/prometheus'
    labels:
      traefik.enable: "true"
      traefik.http.services.prometheus.loadbalancer.server.port: "9090"
      traefik.http.routers.prometheus-http.rule: "((Host(`boss.kapilkumaria.com`) || Host(`www.boss.kapilkumaria.com`)) && PathPrefix(`/prometheus`))"
      traefik.http.routers.prometheus-http.entrypoints: "web"
      traefik.http.routers.prometheus-https.middlewares: "www-to-non-www"
      traefik.http.routers.prometheus-https.rule: "((Host(`boss.kapilkumaria.com`) || Host(`www.boss.kapilkumaria.com`)) && PathPrefix(`/prometheus`))"
      traefik.http.routers.prometheus-https.entrypoints: "websecure"
      traefik.http.routers.prometheus-https.tls.certresolver: "letsencryptresolver"
      traefik.http.routers.prometheus-https.service: "prometheus"
    networks:
      - name: app_network


- name: Copy Grafana configuration to target machine
  ansible.builtin.copy:
    src: "{{ role_path }}/files/grafana.yml"
    dest: "/home/ubuntu/grafana.yml"
    owner: ubuntu
    group: ubuntu
    mode: '0644'

- name: Deploy Grafana container
  ansible.builtin.docker_container:
    name: grafana
    image: kappu1512/grafana
    state: started
    ports:
      - "3000:3000"  # Map container port 3000 to host port 3000
    volumes:
      - "/home/ubuntu/grafana.yml:/etc/grafana/provisioning/datasources/grafana.yaml"
    env:
      GF_SERVER_ROOT_URL: "http://localhost:3000/grafana"
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
    labels:
      traefik.enable: "true"
      # HTTP Service
      traefik.http.services.grafana.loadbalancer.server.port: "3000"
      # HTTP Router
      traefik.http.routers.grafana-http.rule: "((Host(`boss.kapilkumaria.com`) || Host(`www.boss.kapilkumaria.com`)) && PathPrefix(`/grafana`))"
      traefik.http.routers.grafana-http.entrypoints: "web"
      # HTTP to HTTPS redirect
      traefik.http.routers.grafana-https.middlewares: "www-to-non-www"
      # HTTPS Router
      traefik.http.routers.grafana-https.rule: "((Host(`boss.kapilkumaria.com`) || Host(`www.boss.kapilkumaria.com`)) && PathPrefix(`/grafana`))"
      traefik.http.routers.grafana-https.entrypoints: "websecure"
      traefik.http.routers.grafana-https.tls.certresolver: "letsencryptresolver"
      traefik.http.routers.grafana-https.service: "grafana"
    networks:
      - name: app_network

